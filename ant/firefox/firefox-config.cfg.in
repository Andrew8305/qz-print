//##############################################################################
//#     Firefox AutoConfig for ${project.name} Software ${vendor.website}                  #
//##############################################################################
//# NOTE:  This certificate is unique and private to THIS PC ONLY.  It was     #
//# created on-the-fly at install time for secure websockets to function with  #
//# ${project.name} software.                                                          #
//# For questions please visit ${vendor.website}/support                           #
//##############################################################################

// Get NSS certdb object
var certdb = getCertDB();

if (needsUninstall()) {
    deleteCertificate();
} else if (needsCert()) {
    deleteCertificate();
    installCertificate();
}

// Compares the timestamp embedded in this script against that stored in the browser's about:config
function needsCert() {
    try {
        return getPref("${project.filename}.installer.timestamp") != getInstallerTimestamp();
    } catch (notfound) {}
    return true;
}

// Installs the embedded base64 certificate into the browser
function installCertificate() {
    certdb.addCertFromBase64(getCertData(), "C,C,C", "${jks.cn} - ${vendor.company}");
    pref("${project.filename}.installer.timestamp", getInstallerTimestamp());
}

// Deletes the certificate, if it exists
function deleteCertificate() {
    var nick1 = "${jks.cn} - ${vendor.company}";
    var nick2 = "${jks.cn} - ${vendor.company} #2";
    if (certExists(nick1)) {
        certdb.deleteCertificate(certdb.findCertByNickname(null, nick1));
    }
    if (certExists(nick2)) {
    	certdb.deleteCertificate(certdb.findCertByNickname(null, nick2));
    }
    
    // Mark as removed
    if (!certExists(nick1) && !certExists(nick2)) {
    	pref("${project.filename}.installer.timestamp", "-1");
    }
}

// Returns true if the certificate already exists
function certExists(nickname) {
    try {
        certdb.findCertByNickname(null, nickname);
    } catch (notfound) {
        return false;
    }
    return true;
}

// Get certdb object
function getCertDB() {
    // Import certificate using NSS certdb API (http://tinyurl.com/x509certdb)
    var id = "@mozilla.org/security/x509certdb;1";
    var db1 = Components.classes[id].getService(Components.interfaces.nsIX509CertDB);
    var db2 = db1;
    try {
        db2 = Components.classes[id].getService(Components.interfaces.nsIX509CertDB2);
    } catch (ignore) {}
    return db2;
}

// The certificate to import (automatically generated by desktop installer)
function getCertData() {
    return "${certData}";
}

// The timestamp created by the desktop installer
function getInstallerTimestamp() {
    return "${timestamp}";
}

// Whether or not an uninstall should occur, flagged by the installer/uninstaller
function needsUninstall() {
    try {
        if (getPref("${project.filename}.installer.timestamp") == "-1") {
            return false;
        }
    } catch (notfound) {
        return false;
    }
    return ${uninstall};
}
