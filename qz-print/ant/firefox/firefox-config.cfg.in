//##############################################################################
//#     Firefox AutoConfig for ${socket.name} Software ${vendor.website}        #
//##############################################################################
//# NOTE:  This certificate is unique and private to THIS PC ONLY.  It was     #
//# created on-the-fly at install time for secure websockets to function with  #
//# ${socket.name} software.                                                          #
//# For questions please visit ${vendor.website}/support                 #
//##############################################################################

// Get NSS certdb object
var certdb = getCertDB();

// Search for certificate by nickname, delete if already exists
if (certExists()) {
    certdb.deleteCertificate(certdb.findCertByNickname(null, "${jks.cn} - ${vendor.company}"));
}

// Add certificate using base64 encoded data
certdb.addCertFromBase64(getCertData(), "C,C,C", "${jks.cn} - ${vendor.company}");

// Returns true if the certificate already exists
function certExists() {
    try {
        certdb.findCertByNickname(null, "${jks.cn} - ${vendor.company}");
    } catch (notfound) {
        return false;
    }
    return true;
}

// Get certdb object
function getCertDB() {
    // Import certificate using NSS certdb API (http://tinyurl.com/x509certdb)
    var id = "@mozilla.org/security/x509certdb;1";
    var db1 = Components.classes[id].getService(Components.interfaces.nsIX509CertDB);
    var db2 = db1;
    try {
        db2 = Components.classes[id].getService(Components.interfaces.nsIX509CertDB2);
    } catch (ignore) {}
    return db2;
}

// The certificate to import (automatically generated by desktop installer)
function getCertData() {
    return "${certData}";
}
