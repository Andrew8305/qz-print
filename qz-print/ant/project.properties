application.desc=Java applet for sending raw data to a printer.
application.homepage=http://qzindustries.com
application.title=QZ Print Plugin
application.vendor=QZ Industries, LLC

asset.dir=assets

build.dir=out/build
build.version=1.8.5

dist.dir=out/dist
dist.applet.dir=${dist.dir}/applet
dist.socket.dir=${dist.dir}/socket
dist.jar=${dist.dir}/qz-print.jar
dist.applet.jar=${dist.applet.dir}/qz-print.jar
dist.socket.jar=${dist.socket.dir}/qz-print.jar

file.reference.javaws.jar=lib/javaws.jar
file.reference.jssc_qz.jar=lib/jssc_qz.jar
file.reference.pdf-renderer_qz.jar=lib/pdf-renderer_qz.jar
file.reference.plugin.jar=lib/plugin.jar

img.dir=img

lib.dir=lib

jar.archive.disabled=${jnlp.enabled}
jar.compress=true
jar.index=${jnlp.enabled}
javac.classpath=\
    ${file.reference.jssc_qz.jar}:\
    ${file.reference.pdf-renderer_qz.jar}:\
    ${file.reference.plugin.jar}
javac.source=1.5
javac.target=1.5


jnlp.applet.class=qz.PrintApplet
jnlp.applet.height=300
jnlp.applet.width=300
jnlp.codebase.type=web
jnlp.codebase.url=$$$$codebase
jnlp.descriptor=application
jnlp.enabled=true
jnlp.inf.dir=${src.dir}/JNLP-INF
jnlp.lazy.jar.pdf-renderer.jar=true
jnlp.mixed.code=default
jnlp.offline-allowed=false
jnlp.signed=true
jnlp.signing=key
jnlp.signing.alias=jzebra
jnlp.signing.keystore=qz.ks

js.dir=js

main.applet.class=qz.Main
main.socket.class=qz.ws.PrintWebSocketServer
# Optional override of default Codebase manifest attribute, use to prevent RIAs from being repurposed
manifest.custom.codebase=
# Optional override of default Permissions manifest attribute (supported values: sandbox, all-permissions)
manifest.custom.permissions=
manifest.file=manifest.mf
meta.inf.dir=${src.dir}/META-INF

src.dir=src

zip.file=out/dist.zip
