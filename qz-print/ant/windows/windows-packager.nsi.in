!include MUI2.nsh
!include x64.nsh

!ifdef NSIS_UNICODE
	!addplugindir "${windows.nsis.addons}/Plugins/Release_Unicode"
!else
	!addplugindir "${windows.nsis.addons}/Plugins/Release_ANSI"
!endif

!addincludedir "${windows.nsis.addons}/Include/"
!include StdUtils.nsh

Name "${socket.name}"
OutFile "${out.dir}\${build.socket.name}-${build.version}-setup.exe"
RequestExecutionLevel admin

;-------------------------------

InstallDir "$PROGRAMFILES\${socket.name}"

;-------------------------------

!define MUI_ICON "${basedir}\${branding.dir}\${windows.icon}"

!insertmacro MUI_PAGE_WELCOME
!insertmacro MUI_PAGE_LICENSE "${basedir}\..\LICENSE.txt"
!insertmacro MUI_PAGE_DIRECTORY
!insertmacro MUI_PAGE_INSTFILES

!insertmacro MUI_UNPAGE_CONFIRM
!insertmacro MUI_UNPAGE_INSTFILES

!insertmacro MUI_LANGUAGE "English"

;------------------------------

Section
  ; Kills any running ${socket.name} processes
  nsExec::ExecToLog "wmic.exe process where $\"Name like '%java%' and CommandLine like '%${build.socket.name}.jar%'$\" call terminate"
  ; Cleanup for wmic on Windows XP
  Delete "$DESKTOP\TempWmicBatchFile.bat"

  SetOutPath "$INSTDIR"

  File /r "${dist.socket.dir}\*"

  WriteRegStr HKLM "Software\${socket.name}" \
                     "" "$INSTDIR"
  WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${socket.name}" \
                   "DisplayName" "${socket.name} ${build.version}"
  WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${socket.name}" \
                     "Publisher" "${vendor.company}"
  WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${socket.name}" \
                   "UninstallString" "$\"$INSTDIR\uninstall.exe$\""
  WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${socket.name}" \
                   "DisplayIcon" "$INSTDIR\${windows.icon}"
  WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${socket.name}" \
                   "HelpLink" "${vendor.website}/support"
  WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${socket.name}" \
                   "URLUpdateInfo" "${vendor.website}/download"
  WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${socket.name}" \
                   "URLInfoAbout" "${vendor.website}/support"
  WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${socket.name}" \
                   "DisplayVersion" "${build.version}"
  WriteRegDWORD HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${socket.name}" \
                   "EstimatedSize" "${build.socket.size}"

  WriteUninstaller "$INSTDIR\uninstall.exe"

  ; Handle edge-case where jscript support is unregistered
  nsExec::ExecToLog "regsvr32.exe /s $\"%systemroot%\system32\jscript.dll$\""

  ; Remove ${vendor.company} certificates
  nsExec::ExecToLog "cscript.exe //NoLogo $\"$INSTDIR\auth\${windows.keygen.name}$\" $\"$INSTDIR$\" uninstall"

  ; Exports a self-signed certificate and properties file
  nsExec::ExecToLog "cscript.exe //NoLogo $\"$INSTDIR\auth\${windows.keygen.name}$\" $\"$INSTDIR$\" install"

  CreateShortCut "$SMPROGRAMS\${socket.name}.lnk" "$INSTDIR\${build.socket.name}.jar" "" "$INSTDIR\${windows.icon}" 0

  ; Delete matching firewall rules
  nsExec::ExecToLog "cmd.exe /c $\"echo Removing ${socket.name} firewall rules...$\""
  nsExec::ExecToLog "netsh.exe advfirewall firewall delete rule name= $\"${socket.name}$\""

  ; Install new Firewall rules
  nsExec::ExecToLog "cmd.exe /c $\"echo Installing ${socket.name} inbound firewall rule...$\""
  nsExec::ExecToLog "netsh.exe advfirewall firewall add rule name=$\"${socket.name}$\" dir=in action=allow profile=any localport=any localip=any protocol=tcp"
  nsExec::ExecToLog "cmd.exe /c $\"echo Installing ${socket.name} outbound firewall rule...$\""
  nsExec::ExecToLog "netsh.exe advfirewall firewall add rule name=$\"${socket.name}$\" dir=out action=allow profile=any localport=any localip=any protocol=tcp"

  ; Launch a non-elevated instance of ${socket.name}
  ${StdUtils.ExecShellAsUser} $0 "$SMPROGRAMS\${socket.name}.lnk" "open" ""
SectionEnd

;-------------------------------

Section "Uninstall"
  ; Kills any running ${socket.name} processes
  nsExec::ExecToLog "wmic.exe process where $\"Name like '%java%' and CommandLine like '%${build.socket.name}.jar%'$\" call terminate"
  ; Cleanup for wmic on Windows XP
  Delete "$DESKTOP\TempWmicBatchFile.bat"

  ; Remove ${vendor.company} certificates
  nsExec::ExecToLog "cscript.exe //NoLogo $\"$INSTDIR\auth\${windows.keygen.name}$\" $\"$INSTDIR$\" uninstall"

  ; Delete matching firewall rules
  nsExec::ExecToLog "cmd.exe /c $\"echo Removing ${socket.name} firewall rules...$\""
  nsExec::ExecToLog "netsh.exe advfirewall firewall delete rule name= $\"${socket.name}$\""

  Delete "$SMPROGRAMS\${socket.name}.lnk"
  Delete "$INSTDIR\uninstall.exe"
  RMDir /r "$INSTDIR"

  DeleteRegKey HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${socket.name}"
  DeleteRegKey HKLM "Software\${socket.name}"

  Delete "$DESKTOP\${socket.name}.url"
  Delete "$DESKTOP\${socket.name}.lnk"
SectionEnd

;-------------------------------

Function .onInit
    ${If} ${RunningX64}
        SetRegView 64
        StrCpy $INSTDIR "$PROGRAMFILES64\${socket.name}"
    ${EndIf}
FunctionEnd
